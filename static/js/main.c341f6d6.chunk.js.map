{"version":3,"sources":["nav/navBar.js","utilities/localStorage.js","todos/todoItem.js","todos/todoList.js","todos/todoForm.js","utilities/todoHelper.js","todos/todoMatrix.js","reportWebVitals.js","index.js"],"names":["NavBar","props","AppBar","className","IconButton","variant","fontSize","save","key","data","storage","window","localStorage","jsonData","JSON","stringify","setItem","get","getItem","parse","TodoItem","todo","deleteTodo","handleComplete","index","complete","Card","Typography","color","description","size","disabled","onClick","e","aria-label","TodoList","state","todos","name","bind","this","list","setState","nextProps","idx","preventDefault","console","log","newTodos","splice","slice","id","newList","target","value","editList","map","i","Grid","item","Input","onChange","onBlur","updateListName","container","React","Component","TodoForm","listId","field","lists","listOptions","Object","values","MenuItem","newListId","newId","keys","sort","a","b","forEach","nextListId","TextField","placeholder","update","Select","input","Button","handleSubmit","clearField","TodoMatrix","useState","setTodos","setLists","saveLists","newObj","useEffect","storedTodos","storedLists","todoLists","direction","justify","spacing","newTodo","errs","tod","trim","length","push","validTodo","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c341f6d6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./navBar.css\";\n\n// import Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/ToolBar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport TypoGraphy from \"@material-ui/core/Typography\";\n\nfunction NavBar(props) {\n\treturn (\n\t\t<AppBar>\n\t\t\t<ToolBar className=\"header\">\n\t\t\t\t<IconButton>\n\t\t\t\t\t<MenuIcon className=\"header-item\" />\n\t\t\t\t</IconButton>\n\t\t\t\t<TypoGraphy className=\"header-item\" variant=\"h4\">\n\t\t\t\t\tToday's\n\t\t\t\t</TypoGraphy>\n\t\t\t\t<DoneIcon className=\"header-item\" fontSize=\"large\" />\n\t\t\t</ToolBar>\n\t\t</AppBar>\n\t);\n}\n\nexport default NavBar;\n","export const save = (key, data) => {\n\tlet storage = window.localStorage;\n\tlet jsonData = JSON.stringify(data);\n\tstorage.setItem(key, jsonData);\n};\n\nexport const get = (key) => {\n\tlet storage = window.localStorage;\n\tlet jsonData = storage.getItem(key);\n\tlet data = JSON.parse(jsonData);\n\treturn data;\n};\n","import \"./todo.css\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n\n// import Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\n\nconst TodoItem = ({ todo, deleteTodo, handleComplete, index }) => {\n\t// for such a basic component like this we could alternatively use a functional component\n\t// and defer all prop management to the parent\n\tlet completedVar = todo.complete ? \"Completed\" : \"Mark Complete?\";\n\t// let disabled = todo.complete;\n\t// add the class for disabled if a todo is marked as complete\n\t// const classes = useStyles();\n\treturn (\n\t\t<Card variant=\"outlined\" className=\"todo-item\">\n\t\t\t<Typography color=\"textPrimary\" className=\"item-header\">\n\t\t\t\t{todo.description}\n\t\t\t</Typography>\n\n\t\t\t<div className=\"todo-button-group\">\n\t\t\t\t<IconButton\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tdisabled={todo.complete}\n\t\t\t\t\tonClick={(e) => handleComplete(e, index)}\n\t\t\t\t>\n\t\t\t\t\t{todo.complete ? (\n\t\t\t\t\t\t<CheckBoxIcon aria-label=\"undo to do\" />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<CheckBoxOutlineBlankIcon aria-label=\"complete to do\" />\n\t\t\t\t\t)}\n\t\t\t\t</IconButton>\n\t\t\t\t<IconButton\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tonClick={(e) => deleteTodo(e, index)}\n\t\t\t\t>\n\t\t\t\t\t<DeleteIcon aria-label=\"delete to do\" />\n\t\t\t\t</IconButton>\n\t\t\t</div>\n\t\t</Card>\n\t);\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport \"./todo.css\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\n\nimport TodoItem from \"./todoItem.js\";\n\n// list gets their own list info from storage\nclass TodoList extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { todos: [], name: \"\" };\n\t\tthis.deleteTodo = this.deleteTodo.bind(this);\n\t\tthis.handleComplete = this.handleComplete.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tlet state = {\n\t\t\t...this.props.list,\n\t\t\tcolor: this.props.color,\n\t\t\ttodos: this.props.todos,\n\t\t};\n\t\tthis.setState(state);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.todos) {\n\t\t\tthis.setState(nextProps);\n\t\t}\n\t}\n\n\tdeleteTodo(e, idx) {\n\t\te.preventDefault();\n\t\tconsole.log(\"delete\");\n\n\t\tlet newTodos = [...this.state.todos];\n\t\tnewTodos.splice(idx, 1);\n\t\tconsole.log(newTodos);\n\n\t\tthis.setState({ todos: newTodos });\n\t}\n\n\thandleComplete(e, idx) {\n\t\te.preventDefault();\n\n\t\tlet newTodos = this.state.todos.slice();\n\t\t// copy todos\n\n\t\tnewTodos[idx].complete = !newTodos[idx].complete;\n\t\t// we can avoid iterating over the array of todos if we pass the index in\n\t\t// and we no longer need the description argument\n\n\t\t// newTodos = newTodos.reduce((acc, curr)=> {\n\n\t\t//     if (curr.description === description){\n\t\t//       curr.completed = !(curr.completed)\n\t\t//     }\n\t\t//     acc.push(curr)\n\t\t//     return acc\n\t\t// }, [] )\n\n\t\tthis.setState({ todos: newTodos });\n\t}\n\n\tupdateListName(e) {\n\t\tlet { color, id } = this.state;\n\t\tlet newList = { name: e.target.value, color, id };\n\t\tthis.props.editList(newList);\n\t}\n\n\trender() {\n\t\tlet todos = [];\n\t\tif (this.state.todos) {\n\t\t\ttodos = this.state.todos.map((todo, i) => (\n\t\t\t\t<Grid key={todo.description} item>\n\t\t\t\t\t<TodoItem\n\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\tdeleteTodo={this.deleteTodo}\n\t\t\t\t\t\thandleComplete={this.handleComplete}\n\t\t\t\t\t\ttodo={todo}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t));\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3 className=\"header\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\tonChange={(e) => this.setState({ name: e.target.value })}\n\t\t\t\t\t\tonBlur={(e) => this.updateListName(e)}\n\t\t\t\t\t/>\n\t\t\t\t</h3>\n\t\t\t\t<Grid container className=\"list-items\">\n\t\t\t\t\t{todos}\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./todo.css\";\nimport { nextListId } from \"../utilities/todoHelper\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Input from \"@material-ui/core/Input\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\nclass TodoForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { description: \"\", complete: false, listId: 1 };\n\t}\n\n\tupdate(field) {\n\t\treturn (e) => this.setState({ [field]: e.target.value });\n\t}\n\n\tclearField() {\n\t\tthis.setState({ description: \"\", complete: false, listId: 1 });\n\t}\n\n\trender() {\n\t\tlet { lists } = this.props;\n\t\tlet listOptions = Object.values(lists).map((list) => (\n\t\t\t<MenuItem key={list.name + list.id} value={list.id}>\n\t\t\t\t{list.name}\n\t\t\t</MenuItem>\n\t\t));\n\n\t\tlet newListId = nextListId(lists);\n\n\t\treturn (\n\t\t\t<div className=\"todo-form\">\n\t\t\t\t<TextField\n\t\t\t\t\t// label=\"New Todo\"\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tplaceholder=\"Write your Todo's description here!\"\n\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\tonChange={this.update(\"description\")}\n\t\t\t\t/>\n\n\t\t\t\t<Select\n\t\t\t\t\tvalue={this.state.listId}\n\t\t\t\t\tonChange={this.update(\"listId\")}\n\t\t\t\t\tinput={<Input />}\n\t\t\t\t\tclassName=\"list-select\"\n\t\t\t\t>\n\t\t\t\t\t<MenuItem key={\"NewList0\"} value={newListId}>\n\t\t\t\t\t\tNew List?\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t{listOptions}\n\t\t\t\t</Select>\n\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t// className=\"submit-button\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tthis.props.handleSubmit(this.state);\n\t\t\t\t\t\tthis.clearField();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tAdd Todo\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TodoForm;\n","export const nextListId = (lists) => {\n\tlet newId = 1;\n\tlet arr = Object.keys(lists).sort((a, b) => a - b);\n\n\tarr.forEach((id) => {\n\t\tif (id >= newId) newId = id + 1;\n\t});\n\treturn newId;\n};\n","import { useState, useEffect } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport ToolBar from \"@material-ui/core/ToolBar\";\n\nimport { save, get } from \"../utilities/localStorage\";\nimport TodoList from \"./todoList\";\nimport TodoForm from \"./todoForm\";\n\n// https://reactjs.org/docs/hooks-effect.html#tip-optimizing-performance-by-skipping-effects\n\n// matrix creates the right amount of list components\nconst TodoMatrix = (props) => {\n\tconst [todos, setTodos] = useState({});\n\tconst [lists, setLists] = useState({});\n\n\tuseEffect(() => {\n\t\t// comp did mount\n\t\tlet storedTodos = get(\"todos\");\n\t\tif (!storedTodos) storedTodos = {};\n\t\tsetTodos(storedTodos);\n\n\t\tlet storedLists = get(\"lists\");\n\t\tif (!storedLists) storedLists = {};\n\t\tsetLists(storedLists);\n\t\treturn () => {\n\t\t\tconsole.log(\"Unmounting...\");\n\t\t};\n\t}, []);\n\n\tfunction validTodo(tod) {\n\t\tlet errs = [];\n\t\tif (tod.description.trim().length < 1) {\n\t\t\terrs.push(\"Don't forget to name your todo!\");\n\t\t}\n\t\tif (!tod.listId) {\n\t\t\ttod.listId = 1;\n\t\t}\n\t\treturn errs;\n\t}\n\n\tfunction saveTodos(newTodo) {\n\t\tlet newObj = JSON.parse(JSON.stringify(todos));\n\t\tconst errs = validTodo(newTodo);\n\t\tif (!Object.keys(lists).includes(newTodo.listId)) {\n\t\t\tlet newList = {\n\t\t\t\tid: newTodo.listId,\n\t\t\t\tname: \"New Todo List\",\n\t\t\t\tcolor: \"green\",\n\t\t\t};\n\t\t\tsaveLists(newList);\n\t\t}\n\t\tif (errs.length === 0) {\n\t\t\t// save todo into todos\n\t\t\tif (newObj[newTodo.listId]) {\n\t\t\t\tnewObj[newTodo.listId].push(newTodo);\n\t\t\t} else {\n\t\t\t\tnewObj[newTodo.listId] = [newTodo];\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(\"these are the todo errors...\", errs);\n\t\t}\n\n\t\tsetTodos(newObj);\n\t\tsave(\"todos\", newObj);\n\n\t\tconsole.log(\"Saved...\");\n\t}\n\n\tfunction saveLists(newList) {\n\t\tlet newObj = JSON.parse(JSON.stringify(lists));\n\t\tif (!newObj) newObj = { ...lists, [newList.id]: newList };\n\n\t\tnewObj[newList.id] = newList;\n\t\tdebugger;\n\t\tsetLists(newObj);\n\t\tsave(\"lists\", newObj);\n\t}\n\tconsole.log(lists);\n\t// debugger;\n\tlet todoLists = Object.values(lists).map((list, i) => (\n\t\t<Grid key={`id: ${i /*todos[list.id].name*/}`} item className=\"list\">\n\t\t\t<TodoList\n\t\t\t\ttodos={todos[list.id]}\n\t\t\t\tlist={list}\n\t\t\t\tcolor={list.color}\n\t\t\t\teditList={(newList) => saveLists(newList)}\n\t\t\t/>\n\t\t</Grid>\n\t));\n\n\treturn (\n\t\t<div className=\"matrix\">\n\t\t\t<ToolBar />\n\t\t\t<div>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\tspacing={4}\n\t\t\t\t\tclassName=\"matrix\"\n\t\t\t\t>\n\t\t\t\t\t{todoLists}\n\t\t\t\t</Grid>\n\t\t\t\t<TodoForm handleSubmit={saveTodos} lists={lists} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TodoMatrix;\n\n/* ToolBar positioning per Material docs: https://material-ui.com/components/app-bar/ */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport NavBar from \"./nav/navBar\";\nimport TodoMatrix from \"./todos/todoMatrix\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<NavBar />\n\t\t<TodoMatrix />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}